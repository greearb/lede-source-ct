-*- sh -*-

./scripts/feeds update
./scripts/feeds install luci

make menuconfig

make V=s -j 8

# Rebuild a single package
make package/kernel/ath10k-ct/{clean,install} V=sc

# Linksys EA8500
cp bin/targets/ipq806x/generic/lede-ipq806x-EA8500-squashfs-factory.bin /var/lib/tftpboot/
# Interrupt boot, then:
setenv image lede-ipq806x-EA8500-squashfs-factory.bin
setenv serverip 192.168.1.234
run flashimg
run flashimg2
reset

# Ventana (LEDE)
cp bin/targets/imx6/generic/lede-imx6-ventana-squashfs-nand.ubi /var/lib/tftpboot/

setenv ipaddr 192.168.1.1
setenv serverip 192.168.1.234
setenv image_rootfs lede-imx6-ventana-squashfs-nand.ubi

# Save config
saveenv

# To actually flash the new image:
run nand_update
boot


# For APU2, copy image to USB so we can dd it on the apu2
cp bin/targets/x86/64/lede-x86-64-combined-squashfs.img /run/media/greearb/BBB1-652F/

# On apu2 pc-engines booted system, with USB above inserted too
# dd if=/media/usbhd-sdc1/lede-x86-64-combined-squashfs.img of=/dev/sda bs=4k

# Netgear 7800 (9984)


# Automatic login as root (from desktop machine):
ssh root@192.168.1.1 "tee -a /etc/dropbear/authorized_keys" < ~/.ssh/id_rsa.pub

# Install some scripts (apu2)
scp CT/apu2/network CT/apu2/wireless CT/apu2/system CT/bugcheck root@192.168.1.1:/etc/config/

# Install some scripts (linksys)
scp CT/linksys/network CT/linksys/wireless CT/linksys/system CT/bugcheck root@192.168.1.1:/etc/config/

# Install some scripts (netgear r7800 QCA 9984)
scp CT/netgear/network CT/netgear/wireless CT/netgear/system CT/bugcheck root@192.168.1.1:/etc/config/

# Run this on the LEDE systems to install CT firmware.
# New 10.2 firmware
scp 192.168.1.234:/home/greearb/git/qca-10-2-4-70/firmware-5-full-community.bin /lib/firmware/ath10k/QCA988X/hw2.0/firmware-5.bin.ct
# New 10.1 firmware
scp 192.168.1.234:/home/greearb/git/qca/firmware-2-htt-mgt-community.bin /lib/firmware/ath10k/QCA988X/hw2.0/firmware-2.bin
scp 192.168.1.234:/home/greearb/git/qca-15/firmware-2-htt-mgt-community.bin /lib/firmware/ath10k/QCA988X/hw2.0/firmware-2.bin
scp 192.168.1.234:/home/greearb/git/qca/firmware-2-full-community.bin /lib/firmware/ath10k/QCA988X/hw2.0/firmware-2.bin
scp 192.168.1.234:/home/greearb/git/qca/firmware-2-htt-mgt-nrcc.bin /lib/firmware/ath10k/QCA988X/hw2.0/firmware-2.bin

# New 10.4.3 9980 HTT mgt firmware
scp 192.168.1.234:/home/greearb/git/embedd/qca-10-4-3-new-9980/firmware-5-full-htt-mgt-community.bin /lib/firmware/ath10k/QCA99X0/hw2.0/firmware-5.bin
# New 10.4.3 9980 firmware (should work with stock kernel)
scp 192.168.1.234:/home/greearb/git/embedd/qca-10-4-3-new-9980/firmware-5-full-community.bin /lib/firmware/ath10k/QCA99X0/hw2.0/firmware-5.bin

# New 10.4.3 9984 firmware, htt-mgt, stripped, rx-sw-crypt (non-commercial)
scp 192.168.1.234:/home/greearb/git/embedd/qca-10-4-3-new/firmware-5-htt-mgt.bin /lib/firmware/ath10k/QCA9984/hw1.0/firmware-5.bin
scp 192.168.1.234:/home/greearb/git/embedd/qca-10-4-3-new/firmware-5-full-community.bin /lib/firmware/ath10k/QCA9984/hw1.0/firmware-5.bin

# Set debug level higher in ath10k
echo 0x80000010 > /sys/kernel/debug/ieee80211/phy0/ath10k/debug_level
echo 0x80000000 > /sys/kernel/debug/ieee80211/phy0/ath10k/debug_level

# Edit /etc/config/wireless, /etc/config/network as appropriate



# Notes for CT lede project, related to Ventana needs.

# Install Fedora 22, 64-bit to act as build machine.

# Install 'tftp' on your build machine.  These notes assume you
# are using Fedora 22 Linux, but likely other systems will work
# similarly.

# Become root user

su -

# Install dependencies that may not already be on your system:

yum install patch perl-ExtUtils-MakeMaker


# Install and start tftp

yum install tftp-server
systemctl start tftp.socket
systemctl enable tftp.socket
chmod a+rwx /var/lib/tftpboot

# Disable firewall so that tftp can work.  You may also choose to
# configure firewall just to allow tftp from a specific set of hosts
# if you are concerned about security on the TFTP server.
systemctl stop firewalld.service
systemctl disable firewalld.service

# Do initial build.  This sometimes fails for me, but run it a second time
# and it works fine
cd lede
cp CT/ventana.config .config
make oldconfig
make V=s -j 8

# Wait a while...and hopefully you have 10GB+ of disk space available!

# See this page if interested in more details on tftp install:
# http://trac.gateworks.com/wiki/ventana/openwrt

#  Configure the Gateworks serial dongle to work with your machine
# (I use minicom, 115200 8 N 1, /dev/ttyUSB1, no flow control)
#  Power on the Gateworks Ventana board with the serial dongle attached.
#  Interrupt the boot process to drop into the boot loader
#  If this is the initial power-up, the environment may be weird.  Init
#  it to defaults:

env default -f -a
saveenv

# Assume TFTP server is located at IP:  192.168.1.234, and 192.168.1.1 may be used by this
# board.  Be sure you don't allow duplicate IPs on this network, and note any Gateworks board
# that is powered up might default to 192.168.1.1

setenv ipaddr 192.168.1.1
setenv serverip 192.168.1.234

# If you are doing a Belt system, use the command below
setenv image_rootfs lede-imx6-ventana-squashfs-nand_normal.ubi

# Save config
saveenv

# To actually flash the new image:

run nand_update
boot


# You should then change the fixed IP address that is
# used for management of the system.
# The default IP (once booted) is 192.168.1.110 for AP, and 192.168.1.120 for Belt systems.

# Connect to the system with a browser:  firefox http://192.168.1.110

# Default user:  root
#  password:  [blank]

# For security, please set password to something secure.

# Select 'Network' tab, then select 'Interfaces'
# Click 'Edit' button for the 'LAN' interface
# Change IP address information in the 'General Setup' tab as needed
# *** DO NOT set a gateway on the LAN for Belt systems.  They will use the
#     wlan0 station as uplink.  AP system should have gateway configured.  ***
# Click "Save & Apply"
# Reboot the unit and ensure the new IP address information works as expected.


# JWAP230 target notes

# Compile

./scripts/feeds update -a
./scripts/feeds install batctl
make v=S -j 8
/bin/cp bin/targets/ar71xx/generic/lede-ar71xx-generic-jwap230-squashfs-sysupgrade.bin /var/lib/tftpboot

# Install image on the board.
setenv serverip 192.168.1.234
setenv ipaddr 192.168.1.9
tftp 0x80060000 lede-ar71xx-generic-jwap230-squashfs-sysupgrade.bin
# tftp 0x80060000 openwrt-ar71xx-generic-jwap230-squashfs-sysupgrade.bin
erase 0x9f050000 +$filesize
cp.b $fileaddr 0x9f050000 $filesize
setenv bootcmd "bootm 0x9f050000"
saveenv && reset


# Configuration for IBSS mode

config wifi-device 'radio0'
    option log_level '0'
    option path 'pci0000:01/0000:01:00.0'
    option disabled '0'
    option type 'mac80211'
#    option channel '132'  This fails, not sure why.
    option channel '36'
    option htmode 'VHT40'
    option rxantenna '3'
    option txantenna '3'
    option txpower '19'
    option hwmode 'a'
    option country 'FR'
    option country_ie '1'
    option supported_rates '6000 9000 12000 18000 24000 36000 48000 54000'
    option basic_rate '60 120 240'
    option require_mode 'g'
    option log_level '1'

config wifi-iface 'PublicAP'
    option device 'radio0'
    option ifname 'ap0'
    option macfilter '1'
    option isolate '1'
    option mode 'ap'
    option wmm '1'
    option encryption 'none'
    option network 'lan'
    option disassoc_low_ack '0'
    option ssid 'Hotzone 1'
    option hidden '0'
    option disabled '0'

config wifi-iface 'MeshAdhoc'
    option device 'radio0'
    option ssid 'TEST'
    option bssid 'ba:f2:be:e9:36:ab'
    option ifname 'adhoc0'
    option hidden '0'
    option mode 'adhoc'
    option encryption 'psk2'
#    option network 'none'
    option network 'mesh'
    option key 'password'
    option mcast_rate '6000'

# mesh network config


config interface 'loopback'
        option ifname 'lo'
        option proto 'static'
        option ipaddr '127.0.0.1'
        option netmask '255.0.0.0'

config interface 'lan'
        option ifname 'eth1 bat0'
        option force_link '1'
        option type 'bridge'
        option proto 'static'
        option ipaddr '192.168.1.2'
        option netmask '255.255.255.0'

config interface 'wan'
        option ifname 'eth0'
        option proto 'dhcp'

config interface 'mesh'
        option ifname 'adhoc0'
        option proto 'batadv'
        option mesh 'bat0'
	option mtu '1532'

config switch
        option name 'switch0'
        option reset '1'
        option enable_vlan '1'

config switch_vlan
        option device 'switch0'
        option vlan '1'
        option ports '0 1 2 3 4'

config switch_vlan
        option device 'switch0'
        option vlan '2'
        option ports '5 6'


#  Disable DHCP
/etc/init.d/odhcpd disable
/etc/init.d/dnsmasq disable

# iperf instructions, UDP

client: iperf -u -c 10.1.1.2 -b 450m
server: iperf -u -s

# network setup

ifconfig adhoc0 10.1.1.1 netmask 255.255.255.0 up

ifconfig adhoc0 10.1.1.2 netmask 255.255.255.0 up

# Install new firmware:
scp greearb@192.168.100.149:git/qca/firmware-2-full-community.bin /lib/firmware/ath10k/QCA988X/hw2.0/firmware-2.bin
scp greearb@192.168.1.234:git/qca/firmware-2-full-community.bin /lib/firmware/ath10k/QCA988X/hw2.0/firmware-2.bin
scp greearb@192.168.1.234:git/qca/firmware-2-full.bin /lib/firmware/ath10k/QCA988X/hw2.0/firmware-2.bin

# Enable FW verbose debugging
echo 0x9900000002 > /sys/kernel/debug/ieee80211/phy0/ath10k/ct_special

# Copy new driver src into location
/bin/cp ~/git/linux-4.7.dev.y/drivers/net/wireless/ath/ath10k/*.[ch] build_dir/target-mips_74kc_uClibc-0.9.33.2/linux-ar71xx_generic/ath10k-ct-2017-01-18/ath10k/
make -j1 V=s

# Copy new driver from build folder...
cp build_dir/target-mips_74kc_uClibc-0.9.33.2/linux-ar71xx_generic/ath10k-ct-2017-01-18/ipkg-ar71xx/kmod-ath10k-ct/lib/modules/3.18.45/*.ko ~

# Download new driver on openwrt
scp greearb@192.168.100.149:ath10k_pci.ko /lib/modules/3.18.45/
scp greearb@192.168.100.149:ath10k_core.ko /lib/modules/3.18.45/

# Enable verbose MAC logging
echo 0x20000010 > /sys/kernel/debug/ieee80211/phy0/ath10k/debug_level
